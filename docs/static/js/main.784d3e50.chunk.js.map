{"version":3,"sources":["components/AddCategories.js","helpers/GetGif.js","components/GifItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifApp.js","index.js"],"names":["AddCategories","setCategories","setLimit","useState","value","setValue","onSubmit","e","preventDefault","type","onChange","target","placeholder","getGif","category","limit","a","url","encodeURI","fetch","resp","json","data","gif","map","img","id","title","images","downsized_medium","GifItem","item","className","onClick","navigator","clipboard","writeText","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4KAGaA,EAAgB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SAAe,EAChCC,mBAAS,IADuB,mBACnDC,EADmD,KAC5CC,EAD4C,KAc1D,OACI,mCACI,sBAAMC,SATO,SAACC,GAClBA,EAAEC,iBACFP,EAAcG,GACdF,EAAS,IACTG,EAAS,KAKL,SACI,uBAAOI,KAAK,OAAOL,MAAOA,EAAOM,SAdzB,SAACH,GACjBF,EAASE,EAAEI,OAAOP,QAa8CQ,YAAY,sB,uBCpBvEC,EAAM,uCAAG,WAAOC,EAAUC,GAAjB,uBAAAC,EAAA,6DAEZC,EAFY,iDAEoCC,UAClDJ,GAHc,kBAIPC,EAJO,+DAKCI,MAAMF,GALP,cAKZG,EALY,gBAMKA,EAAKC,OANV,uBAMVC,EANU,EAMVA,KACFC,EAAMD,EAAKE,KAAI,SAACC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXvB,kBAcXM,GAdW,4CAAH,wDCENO,EAAU,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAKtB,OACI,qBAAKC,UAAU,yCAAf,SACI,qBAAKC,QANW,SAAC1B,GACrB2B,UAAUC,UAAUC,UAAUL,EAAKd,MAKGoB,IAAKN,EAAKd,IAAKqB,IAAI,QCNpDC,EAAU,SAAC,GAAyB,IAAvBzB,EAAsB,EAAtBA,SAAsB,ECArB,SAACA,EAAUC,GAAW,IAAD,EAClBZ,mBAAS,CAC/BmB,KAAM,GACNkB,SAAS,IAH+B,mBACrCC,EADqC,KAC9BC,EAD8B,KAc5C,OARAC,qBAAU,WACN9B,EAAOC,EAASC,GAAO6B,MAAK,SAACC,GACzBH,EAAS,CACLpB,KAAMuB,EACNL,SAAS,SAGlB,CAAC1B,EAASC,IACN0B,EDZmBK,CAAYhC,EAFM,EAAZC,OAExBO,EAFoC,EAEpCA,KAAMkB,EAF8B,EAE9BA,QACd,OACI,qCACI,qBAAKR,UAAU,mBAAf,SACI,6BAAKlB,MAER0B,GAAW,wCACZ,qBAAKR,UAAU,MAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,6BAAf,SACKV,EAAKE,KAAI,SAACO,GACP,OAAO,cAAC,EAAD,CAAuBA,KAAMA,GAAfA,EAAKL,iBEZzCqB,EAAS,WAAO,IAAD,EACY5C,mBAAS,MADrB,mBACjB6C,EADiB,KACL/C,EADK,OAEEE,mBAAS,IAFX,mBAEjBY,EAFiB,KAEVb,EAFU,KAIxB,OACI,qCACI,iCACI,qBAAK8B,UAAU,MAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,6BACI,gEAGR,8BAIZ,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,eAAf,SACI,cAAC,EAAD,CACI/B,cAAeA,EACfC,SAAUA,MAGlB,cAAC,EAAD,CAASY,SAAUkC,EAAYjC,MAAOA,IAP1C,IAQI,qBAAKiB,UAAU,cAAf,SACI,wBACIC,QAAS,WACL/B,EAASa,EAAQ,KAFzB,uBASR,wBAAQiB,UAAU,qCAAlB,SACI,yECrChBiB,IAASC,OAAO,cAAC,EAAD,IAAYC,SAASC,eAAe,W","file":"static/js/main.784d3e50.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategories = ({ setCategories, setLimit }) => {\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const handleValue = (e) => {\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setCategories(value);\r\n        setLimit(10);\r\n        setValue(\"\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" value={value} onChange={handleValue} placeholder=\"üîé\"/>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nAddCategories.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGif = async (category, limit) => {\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n        category\r\n    )}&limit=${limit}&api_key=acVf25n0dfnwMkrs0g3RaydjUqB5CV4c&offset=2`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gif = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url,\r\n        };\r\n    });\r\n    return gif;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifItem = ({ item }) => {\r\n    const copyToClipboard = (e) => {\r\n        navigator.clipboard.writeText(item.url);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img onClick={copyToClipboard   } src={item.url} alt=\"\" />\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGif } from \"../hooks/useFetchGif\";\r\nimport { GifItem } from \"./GifItem\";\r\nexport const GifGrid = ({ category, limit }) => {\r\n    \r\n    const { data, loading } = useFetchGif(category, limit);\r\n    return (\r\n        <>\r\n            <div className=\"text-center mt-4\">\r\n                <h3>{category}</h3>\r\n            </div>\r\n            {loading && <p>Loading</p>}\r\n            <div className=\"row\">\r\n                <div className=\"col-8 offset-2 mt-5\">\r\n                    <div className=\"card-container text-center\">\r\n                        {data.map((item) => {\r\n                            return <GifItem key={item.id} item={item} />;\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { getGif } from \"../helpers/GetGif\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const useFetchGif = (category, limit) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGif(category,limit).then((imgs) => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false,\r\n            });\r\n        });\r\n    }, [category,limit]);\r\n    return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategories } from \"./components/AddCategories\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifApp = () => {\r\n    const [categories, setCategories] = useState(\"hi\");\r\n    const [limit, setLimit] = useState(10);\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 offset-3\">\r\n                        <div className=\"text-center mt-5\">\r\n                            <h1>\r\n                                <b>Gif Expert App üéá</b>\r\n                            </h1>\r\n                        </div>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <div className=\"mb-5 mt-3\">\r\n                <div className=\"text-center \">\r\n                    <AddCategories\r\n                        setCategories={setCategories}\r\n                        setLimit={setLimit}\r\n                    />\r\n                </div>\r\n                <GifGrid category={categories} limit={limit} />;\r\n                <div className=\"text-center\">\r\n                    <button\r\n                        onClick={() => {\r\n                            setLimit(limit + 10);\r\n                        }}\r\n                    >\r\n                        MORE\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <footer className=\"row bg-dark text-center mt-5 h-100\">\r\n                <h4>Development by Naiar üìê</h4>\r\n            </footer>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { GifApp } from \"./GifApp\";\nReactDOM.render(<GifApp />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}